# 基础数据类型
/*
整型 Integers
TINYINT—1 byte integer（1 个字节的整形型）
SMALLINT—2 byte integer（2 个字节的整形型）
INT—4 byte integer（4 个字节的整形型）
BIGINT—8 byte integer（8 个字节的整形型）
布尔型 Boolean type
BOOLEAN—TRUE/FALSE（只有真/假两个种取值）
浮点数字 Floating point numbers
FLOAT—single precision（单精度）
DOUBLE—Double precision（双精度）
定点数 Fixed point numbers
DECIMAL — 用户定义的比例和精度的固定点值
字符型 String types
STRING — 指定字符集中的字符序列
VARCHAR — 指定字符集中具有最大长度的字符序列
CHAR — 指定字符集中具有最大长度的字符序列
日期时间类型 Date and time types
TIMESTAMP — 没有时区的日期和时间 ("LocalDateTime" 语意)
TIMESTAMP WITH LOCAL TIME ZONE — 精度到纳秒的时间点 ("Instant" 语意)
DATE — 一个日期
二进制类型 Binary types
BINARY — 字节序列
*/
mysql -u root -p
/*数据库相关操作*/
# 创建数据库
create database if not exists mybase
describe mybase

# 删除数据库
drop database mybase
# 创建数据表
create table if not exists mytable(
`field` type (not null primary key)
)comment "this is"
partitioned by(day int)
row format delimited
fields terminated by ', \t'
store as textfile;
# 删除数据表
drop table  mytable
truncate table
# 插入数据
insert into mytable(field1,field2) values (v1,v2)
insert into mytable values(),(),();
# 修改表
update mytable set field1 = val1 where condition =

# 外部导入数据
# 从本地导入数据到hive的表中（实质就是将文件上传到hdfs中hive管理目录下）
load data local inpath './data.txt' into table mytable

# 导出数据
hive - e "select " > out.txt
# case when
select class,
       CASE
           WHEN class = 1 THEN '一班'
           WHEN class = 2 THEN '二班'
           ELSE '三班'
           END as c_name
from students
# 查询语句
# group by
# order by
# having
select class as class, -- 班级
       avg(2020 - b_year) as avg_age -- 平均年龄
from students
group by class
having avg_age > 30
order by avg_age
# 联合查询
selct * from a inner join b on condition=
left join 如果没有符合条件的结果那么也会出现a 表
同理 right join 也是
inner join 就是把符合条件的显示
# 内置函数
